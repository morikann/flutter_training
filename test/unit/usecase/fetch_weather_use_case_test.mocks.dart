// Mocks generated by Mockito 5.4.0 from annotations
// in flutter_training/test/unit/usecase/fetch_weather_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter_training/common/result.dart' as _i3;
import 'package:flutter_training/data/datastore/weather_datastore.dart' as _i2;
import 'package:flutter_training/data/model/weather/weather_forecast_target.dart'
    as _i7;
import 'package:flutter_training/data/model/weather/weather_info.dart' as _i6;
import 'package:flutter_training/data/repository/weather_repository.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWeatherDatastore_0 extends _i1.SmartFake
    implements _i2.WeatherDatastore {
  _FakeWeatherDatastore_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResult_1<T, E> extends _i1.SmartFake implements _i3.Result<T, E> {
  _FakeResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WeatherRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherRepository extends _i1.Mock implements _i4.WeatherRepository {
  @override
  _i2.WeatherDatastore get datastore => (super.noSuchMethod(
        Invocation.getter(#datastore),
        returnValue: _FakeWeatherDatastore_0(
          this,
          Invocation.getter(#datastore),
        ),
        returnValueForMissingStub: _FakeWeatherDatastore_0(
          this,
          Invocation.getter(#datastore),
        ),
      ) as _i2.WeatherDatastore);
  @override
  _i5.Future<_i3.Result<_i6.WeatherInfo, String>> getWeather(
          _i7.WeatherForecastTarget? target) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWeather,
          [target],
        ),
        returnValue: _i5.Future<_i3.Result<_i6.WeatherInfo, String>>.value(
            _FakeResult_1<_i6.WeatherInfo, String>(
          this,
          Invocation.method(
            #getWeather,
            [target],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Result<_i6.WeatherInfo, String>>.value(
                _FakeResult_1<_i6.WeatherInfo, String>(
          this,
          Invocation.method(
            #getWeather,
            [target],
          ),
        )),
      ) as _i5.Future<_i3.Result<_i6.WeatherInfo, String>>);
}
